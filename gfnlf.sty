%%
%% This is file `gfnlf.sty',
%% a LaTeX package for writing logical formulae in structurized style.
%%
%% Copyright 2015 gfn (Takashi SUWA)
%%      Email (Private) : b d . g f n g f n ( a t m a r k ) g m a i l . c o m
%%               GitHub : https://github.com/gfngfn
%%             Web Site : http://buddhagaja.soregashi.com/
%%
\NeedsTeXFormat{LaTeX2e}
  [1994/12/01]% LaTeX date must be December 1994 or later
\ProvidesPackage{gfnlf}[2015/02/07 v0.9 by gfn (Takashi SUWA)]
% ---- style options ----
\def\quantifierparenskip{\hspace{0.25em}}
\def\quantifiernoparenskip{\hspace{0.75em}}
\def\operatorparenskip{\hspace{0.125em}}
\def\operatornoparenskip{\hspace{0.25em}}
%
\let\gfncmd@exists@normal\exists
\def\gfncmd@exists@upper{\smash{\raise0.25em\hbox{$\exists$}}}
\let\gfncmd@forall@normal\forall
\def\gfncmd@forall@upper{\smash{\raise0.25em\hbox{$\forall$}}}
\def\gfncmd@existssole@normal{\exists!}
\def\gfncmd@existssole@upper{\smash{\raise0.25em\hbox{$\exists!$}}}
%
% -- option declaration --
\def\usesinglequantifier{\def\gfncmd@option@quantifier{0}}
\def\usepluralquantifier{\def\gfncmd@option@quantifier{1}}
\def\usedotsinglequantifier{\def\gfncmd@option@quantifier{2}}
\def\usedotpluralquantifier{\def\gfncmd@option@quantifier{3}}
\def\useparensinglequantifier{\def\gfncmd@option@quantifier{4}}
\def\useparenpluralquantifier{\def\gfncmd@option@quantifier{5}}
\usedotpluralquantifier
%
\def\usenormalquantifierheight{%
  \let\gfncmd@exists\gfncmd@exists@normal
  \let\gfncmd@forall\gfncmd@forall@normal
  \let\gfncmd@existssole\gfncmd@existssole@normal
}
\def\useupperquantifierheight{%
  \let\gfncmd@exists\gfncmd@exists@upper
  \let\gfncmd@forall\gfncmd@forall@upper
  \let\gfncmd@existssole\gfncmd@existssole@upper
}
\usenormalquantifierheight
% ==== quantifier ====
% -- general quantifier --
\def\quantifier#1#2#3#4#5#6{%
  \gfncmd@subquantifier#1|\gfncmd@punct{#2}{#3}{#4}{#5}{0}{#6}%
}
\def\gfncmd@subquantifier#1|#2\gfncmd@punct#3#4#5#6#7#8{
    % ---- ---- ---- ----
    % #3 : set
    % #4 : main formula
    % #5 : quantifier such as \forall
    % #6 : binary operator such as \in
    % ---- ---- ---- ----
  \ifcase#7\relax
  %%%%(first time)
    #5#1%
  \or%(after first time)
    \expandafter\ifcase\gfncmd@option@quantifier\relax
    %%%%(option: \usesinglequantifier)
      , #1%
    \or%(option: \usepluralquantifier)
      #5#1%
    \or%(option: \usedotsinglequantifier)
      , #1%
    \or%(option: \usedotpluralquantifier)
      #5#1%
    \or%(option: \useparensinglequantifier)
      , #1%
    \or%(option: \useparenpluralquantifier)
      #5#1%
    \fi
  \fi
  \ifx\relax#2\relax
    #6#3%
    % whether inserting tab character or not
    \ifcase#8\relax
    \else
      \gfncmd@escapedtabchar
    \fi
    \expandafter\ifcase\gfncmd@option@quantifier\relax
    %%%%(option: \usesinglequantifier)
      \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@omitlistRquantifier}{\quantifiernoparenskip#4}{%
        \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@mndtlistRquantifier}{%
          \quantifierparenskip\paren{#4}}{\quantifiernoparenskip#4}}%
    \or%(option: \usepluralquantifier)
      \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@omitlistRquantifier}{\quantifiernoparenskip#4}{%
        \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@mndtlistRquantifier}{%
          \quantifierparenskip\paren{#4}}{\quantifiernoparenskip#4}}%
    \or%(option: \usedotsinglequantifier)
      .%
      \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@omitlistRquantifier}{\quantifiernoparenskip#4}{%
        \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@mndtlistRquantifier}{%
          \quantifierparenskip\paren{#4}}{\quantifiernoparenskip#4}}%
    \or%(option: \usedotpluralquantifier)
      .%
      \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@omitlistRquantifier}{\quantifiernoparenskip#4}{%
        \gfncmd@checkparenisneeded#4\gfncmd@punct{\gfncmd@mndtlistRquantifier}{%
          \quantifierparenskip\paren{#4}}{\quantifiernoparenskip#4}}%
    \or%(option: \useparensinglequantifier)
      \quantifierparenskip\paren{#4}%
    \or%(option: \useparenpluralquantifier)
      \quantifierparenskip\paren{#4}%
    \fi
  \else
    \gfncmd@subquantifier#2\gfncmd@punct{#3}{#4}{#5}{#6}{1}{#8}%
  \fi
}
\def\gfncmd@escapedtabchar{&}
%
% ---- concrete quantifier ----
\newcommand{\forallin}[4][0]{\quantifier{#2}{#3}{#4}{\gfncmd@forall}{\in}{#1}}
\newcommand{\existsin}[4][0]{\quantifier{#2}{#3}{#4}{\gfncmd@exists}{\in}{#1}}
\newcommand{\forallsub}[4][0]{\quantifier{#2}{#3}{#4}{\gfncmd@forall}{\subseteq}{#1}}
\newcommand{\existssub}[4][0]{\quantifier{#2}{#3}{#4}{\gfncmd@exists}{\subseteq}{#1}}
\newcommand{\existssolein}[4][0]{\quantifier{#2}{#3}{#4}{\gfncmd@existssole}{\in}{#1}}
\newcommand{\existssolesub}[4][0]{\quantifier{#2}{#3}{#4}{\gfncmd@existssole}{\subseteq}{#1}}
\newcommand{\forallfunc}[5][0]{\quantifier{#2}{#3 \rightarrow #4}{#5}{\gfncmd@forall}{:}{#1}}
\newcommand{\existsfunc}[5][0]{\quantifier{#2}{#3 \rightarrow #4}{#5}{\gfncmd@exists}{:}{#1}}
\newcommand{\existsisom}[5][0]{\quantifier{#2}{#3 \cong #4}{#5}{\gfncmd@exists}{:}{#1}}
\def\gfnlf@quantifiers{\forallin\existsin\forallsub\existssub\forallfunc\existsfunc\existsisom\existssolein\existssolesub}
%
% ==== other logical operators ====
% -- predicate symbols ----
\def\lfpv#1{#1}
% -- unary logical NOT operator --
\def\lflnot#1{%
  \lnot
  \gfncmd@checkparenisneeded#1\gfncmd@punct{\gfncmd@omitlistRlflnot}{#1}{\paren{#1}}%
}
% ==== binary logical operator ====
% -- general binary logical operator --
\def\logicalbinaryoperator#1#2#3#4#5#6#7{%
    % ---- ---- ---- ----
    % #1 : left argument formula
    % #2 : right argument formula
    % #3 : binary logical operator symbol
    % #4 : list of left-paren-omittable token(s)
    % #5 : list of left-paren-mandatory token(s)
    % #6 : list of right-paren-omittable token(s)
    % #7 : list of right-paren-mandatory token(s)
    % ---- ---- ---- ----
  \gfncmd@checkparenisneeded#1\gfncmd@punct{#4}{#1\operatornoparenskip}{%
    \gfncmd@checkparenisneeded#1\gfncmd@punct{#5}{%
      \paren{#1}\operatorparenskip}{#1\operatornoparenskip}}%
  #3%
  \gfncmd@checkparenisneeded#2\gfncmd@punct{#6}{\operatornoparenskip#2}{%
    \gfncmd@checkparenisneeded#2\gfncmd@punct{#7}{%
      \operatorparenskip\paren{#2}}{\operatornoparenskip#2}}%
}
\def\gfncmd@checkparenisneeded#1#2\gfncmd@punct#3#4#5{%
    % ---- ---- ---- ----
    % #1#2 : argument formula
    % #3 : list of token(s)
    % #4 : program evaluated if #3 contains #1
    % #5 : program evaluated otherwise
    % ---- ---- ---- ----
  \gfncmd@checklist{#3}{#1}{#4}{#5}%
}
\def\gfncmd@checklist#1#2#3#4{%
    % ---- ---- ---- ----
    % #1 : list of token(s)
    % #2 : head token of argument formula
    % ---- ---- ---- ----
  \expandafter\gfncmd@subchecklist#1\gfncmd@punct{#2}{#3}{#4}%
}
\def\gfncmd@subchecklist#1#2\gfncmd@punct#3#4#5{%
    % ---- ---- ---- ----
    % #1#2 : expanded list
    % #3 : head token of argument formula
    % ---- ---- ---- ----
  \def\gfncmd@tokeninlist{#1}%
  \def\gfncmd@headtoken{#3}%
  \ifx\gfncmd@tokeninlist\gfncmd@headtoken
    #4%
  \else
    \ifx\relax#2\relax
      #5%
    \else
      \gfncmd@subchecklist#2\gfncmd@punct{#3}{#4}{#5}%
    \fi
  \fi
}
% -- concrete logical binary operator --
\def\lfland#1#2{%
  \logicalbinaryoperator{#1}{#2}{\land}{\gfncmd@omitlistLlfland}{\gfncmd@mndtlistLlfland}%
    {\gfncmd@omitlistRlfland}{\gfncmd@mndtlistRlfland}}
\def\lflor#1#2{%
  \logicalbinaryoperator{#1}{#2}{\lor}{\gfncmd@omitlistLlflor}{\gfncmd@mndtlistLlflor}%
    {\gfncmd@omitlistRlflor}{\gfncmd@mndtlistRlflor}}
\def\lflimpl#1#2{%
  \logicalbinaryoperator{#1}{#2}{\limpl}{\gfncmd@omitlistLlflimpl}{\gfncmd@mndtlistLlflimpl}%
    {\gfncmd@omitlistRlflimpl}{\gfncmd@mndtlistRlflimpl}}
\def\lflimpleqv#1#2{%
  \logicalbinaryoperator{#1}{#2}{\limpleqv}{\gfncmd@omitlistLlflimpleqv}{\gfncmd@mndtlistLlflimpleqv}%
    {\gfncmd@omitlistRlflimpleqv}{\gfncmd@mndtlistRlflimpleqv}}
%
% ==== paren-omittable list and paren-mandatory list ====
%   define when paren is omittable or mandatory
%   if neigher \gfncmd@omitlist.. nor \gfncmd@mndtlist.. contains the token T,
%   the token list whose head is T is regarded as an ordinary formula
\expandafter\def\expandafter\gfncmd@omitlistLlfland\expandafter
  {\gfnlf@quantifiers\lfpv\lflnot\lfland}
\expandafter\def\expandafter\gfncmd@mndtlistLlfland\expandafter
  {\gfnlf@quantifiers\lflor\lflimpl\lflimpleqv}
\def\gfncmd@omitlistLlflor
  {\lfpv\lflnot\lflor}
\expandafter\def\expandafter\gfncmd@mndtlistLlflor\expandafter
  {\gfnlf@quantifiers\lfland\lflimpl\lflimpleqv}
\def\gfncmd@omitlistLlflimpl
  {\lfpv\lflnot\lfland\lflor}
\expandafter\def\expandafter\gfncmd@mndtlistLlflimpl\expandafter
  {\gfnlf@quantifiers\lflimpl\lflimpleqv}
\def\gfncmd@omitlistLlflimpleqv
  {\lfpv\lflnot\lfland\lflor}
\expandafter\def\expandafter\gfncmd@mndtlistLlflimpleqv\expandafter
  {\gfnlf@quantifiers\lflimpl\lflimpleqv}
%
\expandafter\def\expandafter\gfncmd@omitlistRquantifier\expandafter
  {\gfnlf@quantifiers\lfpv\lflnot}
\def\gfncmd@mndtlistRquantifier
  {\lfland\lflor\lflimpl\lflimpleqv}
\expandafter\def\expandafter\gfncmd@omitlistRlflnot\expandafter
  {\gfnlf@quantifiers\lfpv\lflnot}
\def\gfncmd@mndtlistRlflnot
  {\lfland\lflor\lflimpl\lflimpleqv}
\expandafter\def\expandafter\gfncmd@omitlistRlfland\expandafter
  {\gfnlf@quantifiers\lfpv\lflnot\lfland}
\def\gfncmd@mndtlistRlfland
  {\lflor\lflimpl\lflimpleqv}
\expandafter\def\expandafter\gfncmd@omitlistRlflor\expandafter
  {\gfnlf@quantifiers\lfpv\lflnot\lflor}
\def\gfncmd@mndtlistRlflor
  {\lfland\lflimpl\lflimpleqv}
\expandafter\def\expandafter\gfncmd@omitlistRlflimpl\expandafter
  {\gfnlf@quantifiers\lfpv\lflnot\lfland\lflor\lflimpl}
\def\gfncmd@mndtlistRlflimpl
  {\lflimpleqv}
\expandafter\def\expandafter\gfncmd@omitlistRlflimpleqv\expandafter
  {\gfnlf@quantifiers\lfpv\lflnot\lfland\lflor}
\def\gfncmd@mndtlistRlflimpleqv
  {\lflimpl\lflimpleqv}
%
% ==== control sequence for operating list ====
\def\makerightparenomittable#1#2{%
  \expandafter\def\expandafter\gfncmd@added\expandafter{\csname#2\endcsname}%
  \expandafter\gfncmd@addtokentolist\expandafter\gfncmd@added\csname gfncmd@omitlistR#1\endcsname
  \expandafter\gfncmd@deletetokenfromlist\expandafter\gfncmd@added\csname gfncmd@mndtlistR#1\endcsname
}
\def\makeleftparenomittable#1#2{%
  \expandafter\def\expandafter\gfncmd@added\expandafter{\csname#2\endcsname}%
  \expandafter\gfncmd@addtokentolist\expandafter\gfncmd@added\csname gfncmd@omitlistL#1\endcsname
  \expandafter\gfncmd@deletetokenfromlist\expandafter\gfncmd@added\csname gfncmd@mndtlistL#1\endcsname
}
\def\makerightparenmandatory#1#2{%
  \expandafter\def\expandafter\gfncmd@deleted\expandafter{\csname#2\endcsname}%
  \expandafter\gfncmd@deletetokenfromlist\expandafter\gfncmd@deleted\csname gfncmd@omitlistR#1\endcsname
  \expandafter\gfncmd@addtokentolist\expandafter\gfncmd@deleted\csname gfncmd@mndtlistR#1\endcsname
}
\def\makeleftparenmandatory#1#2{%
  \expandafter\def\expandafter\gfncmd@deleted\expandafter{\csname#2\endcsname}%
  \expandafter\gfncmd@deletetokenfromlist\expandafter\gfncmd@deleted\csname gfncmd@omitlistL#1\endcsname
  \expandafter\gfncmd@addtokentolist\expandafter\gfncmd@deleted\csname gfncmd@mndtlistL#1\endcsname
}
  \def\gfncmd@deletetokenfromlist#1#2{%
    % ---- ---- ---- ----
    % #1 : token-in token
    % #2 : list
    % ---- ---- ---- ----
  \expandafter\gfncmd@subdeletetokenfromlist#2\gfncmd@punct\gfncmd@punct{#1}{#2}%
}
\def\gfncmd@subdeletetokenfromlist#1#2\gfncmd@punct#3\gfncmd@punct#4#5{%
    % ---- ---- ---- ----
    % #1#2 : expanded list
    % #3 : growing expanded list
    % #4 : token-in token
    % #5 : list
    % ---- ---- ---- ----
  \def\gfncmd@tokeninlist{#1}%
  \ifx\gfncmd@tokeninlist#4%
    \gfncmd@subdeletetokenfromlist#2\gfncmd@punct#3\gfncmd@punct{#4}{#5}%
  \else
    \ifx\relax#2\relax
      \def#5{#3#1}%
    \else
      \gfncmd@subdeletetokenfromlist#2\gfncmd@punct#3#1\gfncmd@punct{#4}{#5}%
    \fi
  \fi
}
\def\gfncmd@addtokentolist#1#2{%
    % ---- ---- ---- ----
    % #1 : token-in token
    % #2 : list
    % ---- ---- ---- ----
  \expandafter\gfncmd@subaddtokentolist#2\gfncmd@punct{#1}{#2}%
}
\def\gfncmd@subaddtokentolist#1#2\gfncmd@punct#3#4{%
    % ---- ---- ---- ----
    % #1#2 : expanded list
    % #3 : token-in token
    % #4 : list
    % ---- ---- ---- ----
  \def\gfncmd@tokeninlist{#1}%
  \ifx\gfncmd@tokeninlist#3%
  \else
    \ifx\relax#2\relax
      \expandafter\expandafter\expandafter\def
        \expandafter\expandafter\expandafter#4%
        \expandafter\expandafter\expandafter{\expandafter#4#3}%
    \else
      \gfncmd@subaddtokentolist#2\gfncmd@punct{#3}{#4}%
    \fi
  \fi
}
